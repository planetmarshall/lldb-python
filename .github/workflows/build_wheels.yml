name: Build and Publish

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build-wheels:
    name: Build ${{ matrix.os }} for ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_DIR: /tmp/ccache
      CONAN_HOME: /tmp/conan
      CCACHE_MAXSIZE: 2G
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [macos-14, ubuntu-22.04]
        python_version: ["cp310", "cp311", "cp312"]
        include:
          - os: macos-14
            profile: macos-armv8
            llvm_targets: "AArch64;X86"
            llvm_runtimes: "libcxx"
          - os: ubuntu-22.04
            profile: linux-x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup CCache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Setup Conan Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CONAN_HOME }}/p
          key: conan-${{ runner.os }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          SKBUILD_LLVM_TARGETS_TO_BUILD: ${{ matrix.llvm_targets }}
          SKBUILD_LLVM_ENABLE_RUNTIMES: ${{ matrix.llvm_runtimes }}
          CIBW_BUILD: '${{ matrix.python_version }}-*'
          CONAN_HOST_PROFILE: ${{ github.workspace }}/.github/conan/${{ matrix.profile }}

      - name: Prepare the caches
        run: |
          mkdir -p ${CONAN_HOME}
          mkdir -p ${CCACHE_DIR}
          sudo chown -R ${USER} ${CONAN_HOME}
          sudo chown -R ${USER} ${CCACHE_DIR}
          conan cache clean
        if: always()

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python_version }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build-wheels
    runs-on: ubuntu-22.04

    environment:
      name: testpypi
      url: https://test.pypi.org/p/lldb-python

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: 'cibw-wheels-*'

      - name: move wheels to package dir
        run: |
          mkdir wheels
          find dist -name '*.whl' -print0 | xargs -0 -I% mv % wheels/

      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: wheels/
          skip-existing: true

  publish-to-pypi:
      name: Publish to PyPi
      if: startsWith(github.ref, 'refs/tags/')
      needs:
        - build-wheels
      runs-on: ubuntu-22.04

      environment:
        name: pypi
        url: https://pypi.org/p/lldb-python

      permissions:
        id-token: write

      steps:
      - name: Download the wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: 'cibw-wheels-*'

      - name: move wheels to package dir
        run: |
          mkdir wheels
          find dist -name '*.whl' -print0 | xargs -0 -I% mv % wheels/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheels/

  github-release:
    name: Make Github Release
    needs:
      - publish-to-pypi

    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: 'cibw-wheels-*'

      - name: move wheels to package dir
        run: |
          mkdir wheels
          find dist -name '*.whl' -print0 | xargs -0 -I% mv % wheels/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: >-
            ./wheels/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' wheels/**
          --repo '${{ github.repository }}'
