name: Build

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_DIR: /tmp/ccache
      CONAN_USER_HOME: /tmp/conan
      CCACHE_MAXSIZE: 2G
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [macos-14, ubuntu-22.04]
        python_version: ["cp310-*", "cp311-*", "cp312-*"]
        include:
          - os: macos-14
            llvm_targets: "AArch64;X86"
            llvm_runtimes: "libcxx"

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install conan
        run: pip install conan

      - name: Install ccache
        run: brew install ccache
        if: runner.os == 'macOS'

      - name: Setup CCache
        uses: actions/cache@v4
        if: runner.os == 'macOS'
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}

      - name: Setup Conan Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CONAN_USER_HOME }}/p
          key: conan-${{ runner.os }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          SKBUILD_LLVM_TARGETS_TO_BUILD: ${{ matrix.llvm_targets }}
          SKBUILD_LLVM_ENABLE_RUNTIMES: ${{ matrix.llvm_runtimes }}
          CIBW_BUILD: ${{ matrix.python_version }}

      - name: Clean the conan cache
        run: conan cache clean
        if: always()

      - name: Output some ccache stats
        run: ccache --show-stats
        if: always() && runner.os == 'macOS'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
